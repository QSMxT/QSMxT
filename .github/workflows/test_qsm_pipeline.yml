name: qsm pipeline test

on:
  workflow_dispatch:
  repository_dispatch:
  push:
    branches: [ master ]
    paths:
      - README.md
      - run_0_dicomSort.py
      - run_1_dicomConvert.py
      - run_2_qsm.py
      - interfaces/nipype_interface_addtojson.py
      - interfaces/nipype_interface_axialsampling.py
      - interfaces/nipype_interface_bet2.py
      - interfaces/nipype_interface_erode.py
      - interfaces/nipype_interface_json.py
      - interfaces/nipype_interface_laplacian_unwrapping.py
      - interfaces/nipype_interface_makehomogeneous.py
      - interfaces/nipype_interface_masking.py
      - interfaces/nipype_interface_nextqsm.py
      - interfaces/nipype_interface_nonzeroaverage.py
      - interfaces/nipype_interface_phaseweights.py
      - interfaces/nipype_interface_processphase.py
      - interfaces/nipype_interface_qsmjl.py
      - interfaces/nipype_interface_romeo.py
      - interfaces/nipype_interface_tgv_qsm.py
      - interfaces/nipype_interface_twopass.py
      - scripts/logger.py
      - scripts/makehomogeneous.jl
      - scripts/mrt_laplacian_unwrapping.jl
      - scripts/qsmjl_full.jl
      - scripts/qsmjl_laplacian_unwrapping.jl
      - scripts/qsmjl_pdf.jl
      - scripts/qsmjl_rts.jl
      - scripts/qsmjl_tv.jl
      - scripts/qsmjl.vsharp.jl
      - scripts/romeo_unwrapping.jl
      - scripts/romeo_voxelquality.jl
      - scripts/qsmxt_functions.py
      - scripts/qsmxt_version.py
      - .github/workflows/test_qsm_pipeline.yml
      - tests/test_qsm_pipeline.sh
      - tests/test_qsm_pipeline.py
      - qsm_pipelines.json
      - workflows/qsm.py
      - workflows/masking.py
  pull_request:
    branches: [ master ]
    paths:
      - README.md
      - run_0_dicomSort.py
      - run_1_dicomConvert.py
      - run_2_qsm.py
      - interfaces/nipype_interface_addtojson.py
      - interfaces/nipype_interface_axialsampling.py
      - interfaces/nipype_interface_bet2.py
      - interfaces/nipype_interface_erode.py
      - interfaces/nipype_interface_json.py
      - interfaces/nipype_interface_laplacian_unwrapping.py
      - interfaces/nipype_interface_makehomogeneous.py
      - interfaces/nipype_interface_masking.py
      - interfaces/nipype_interface_nextqsm.py
      - interfaces/nipype_interface_nonzeroaverage.py
      - interfaces/nipype_interface_phaseweights.py
      - interfaces/nipype_interface_processphase.py
      - interfaces/nipype_interface_qsmjl.py
      - interfaces/nipype_interface_romeo.py
      - interfaces/nipype_interface_tgv_qsm.py
      - interfaces/nipype_interface_twopass.py
      - scripts/logger.py
      - scripts/makehomogeneous.jl
      - scripts/mrt_laplacian_unwrapping.jl
      - scripts/qsmjl_full.jl
      - scripts/qsmjl_laplacian_unwrapping.jl
      - scripts/qsmjl_pdf.jl
      - scripts/qsmjl_rts.jl
      - scripts/qsmjl_tv.jl
      - scripts/qsmjl.vsharp.jl
      - scripts/romeo_unwrapping.jl
      - scripts/romeo_voxelquality.jl
      - scripts/qsmxt_functions.py
      - scripts/qsmxt_version.py
      - .github/workflows/test_qsm_pipeline.yml
      - tests/test_qsm_pipeline.sh
      - tests/test_qsm_pipeline.py
      - qsm_pipelines.json
      - workflows/qsm.py
      - workflows/masking.py
    
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      space_ready: ${{ steps.free_space.outputs.ready }}
      docker_ready: ${{ steps.move_docker.outputs.ready }}
    steps:
    - name: Free up space
      id: free_space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 40000
        swap-size-mb: 1024
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        overprovision-lvm: 'true'
    - name: Move docker installation
      id: move_docker
      run: |
          sudo mv /var/lib/docker /home/runner/work/docker
          sudo ln -s /home/runner/work/docker /var/lib/docker
          sudo systemctl restart docker
          echo "::set-output name=ready::true"
    - uses: actions/checkout@v3
    - name: Setup QSMxT
      id: setup_qsmxt
      run: tests/setup_qsmxt.sh
    - name: Cache QSMxT files
      uses: actions/cache@v2
      with:
        path: /tmp/QSMxT
        key: qsmxt-repo-${{ github.run_id }}
        restore-keys: qsmxt-repo
    - name: Save QSMxT image to tar
      run: |
        docker images
        IMAGE_ID=$(docker images --filter="reference=*/qsmxt:*" --format "{{.ID}}")
        echo "IMAGE_ID=${IMAGE_ID}"
        FULL_IMAGE_NAME=$(docker images --filter="reference=*/qsmxt:*" --format "{{.Repository}}:{{.Tag}}")
        echo "FULL_IMAGE_NAME=$FULL_IMAGE_NAME" >> $GITHUB_ENV
        echo "FULL_IMAGE_NAME=${FULL_IMAGE_NAME}"
        echo "docker save ${IMAGE_ID} -o /tmp/qsmxt-image.tar"
        docker save $IMAGE_ID -o /tmp/qsmxt-image.tar
    - name: Cache QSMxT image for next step
      uses: actions/cache@v2
      with:
        path: /tmp/qsmxt-image.tar
        key: qsmxt-image-${{ env.FULL_IMAGE_NAME }}
        restore-keys: qsmxt-image-
  test_qsm_premades:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        args: ['gre', 'epi', 'bet', 'fast', 'body', 'nextqsm']
    steps:
    - name: Setup common steps
      if: needs.setup.outputs.space_ready == 'true' && needs.setup.outputs.docker_ready == 'true'
      run: echo "Common steps are ready"
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: Restore QSMxT files cache
      uses: actions/cache@v2
      with:
        path: /tmp/QSMxT
        key: qsmxt-files-${{ github.run_id }}
        restore-keys: qsmxt-files-
    - name: Restore QSMxT image cache
      uses: actions/cache@v2
      with:
        path: /tmp/qsmxt-image.tar
        key: qsmxt-image-${{ github.run_id }}
        restore-keys: qsmxt-image-
    - name: Load QSMxT image from tar
      run: |
        docker load -i /tmp/qsmxt-image.tar
    - name: Test QSM premades
      env:
        DOWNLOAD_URL: ${{ secrets.DOWNLOAD_URL }}
        UPLOAD_URL: ${{ secrets.UPLOAD_URL }}
        DATA_PASS: ${{ secrets.DATA_PASS }}
      run: |
        /bin/bash tests/test_qsm_pipeline.sh -k \"test_premade and ${{ matrix.args }}\"
    - uses: actions/upload-artifact@v3
      with:
        name: public-outputs
        path: /tmp/public-outputs
  test_qsm_edgecases:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Setup common steps
      if: needs.setup.outputs.space_ready == 'true' && needs.setup.outputs.docker_ready == 'true'
      run: echo "Common steps are ready"
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: Restore QSMxT files cache
      uses: actions/cache@v2
      with:
        path: /tmp/QSMxT
        key: qsmxt-files-${{ github.run_id }}
        restore-keys: qsmxt-files-
    - name: Restore QSMxT image cache
      uses: actions/cache@v2
      with:
        path: /tmp/qsmxt-image.tar
        key: qsmxt-image-${{ github.run_id }}
        restore-keys: qsmxt-image-
    - name: Load QSMxT image from tar
      run: |
        docker load -i /tmp/qsmxt-image.tar
    - name: Test QSM pipeline edge cases
      env:
        DOWNLOAD_URL: ${{ secrets.DOWNLOAD_URL }}
        UPLOAD_URL: ${{ secrets.UPLOAD_URL }}
        DATA_PASS: ${{ secrets.DATA_PASS }}
      run: |
        /bin/bash tests/test_qsm_pipeline.sh -k \"not test_premade\"
    - uses: actions/upload-artifact@v3
      with:
        name: public-outputs
        path: /tmp/public-outputs

