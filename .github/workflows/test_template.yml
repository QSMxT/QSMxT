name: template pipeline test

on:
  workflow_dispatch:
  repository_dispatch:
  push:
    branches: [ 'main' ]
    paths:
      - setup.py
      - .github/workflows/test_template.yml
      - qsmxt/cli/main.py
      - qsmxt/tests/test_template.sh
      - qsmxt/tests/test_template.py
      - qsmxt/tests/utils.py
      - qsmxt/tests/setup_qsmxt.sh
      - qsmxt/scripts/logger.py
      - qsmxt/workflows/template.py
    
jobs:
  setup_qsmxt:
    runs-on: "self-hosted"
    outputs:
      setup-complete: 'true'
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: Setup QSMxT
      env:
        TEST_DIR: "/storage/tmp"
        REQUIRED_VERSION_TYPE: "TEST_PACKAGE_VERSION"
      run: |
        /bin/bash qsmxt/tests/setup_qsmxt.sh docker
  test_template:
    needs: setup_qsmxt
    runs-on: "self-hosted"
    strategy:
      matrix:
        args: ['test_template', 'test_template_existing_qsms']
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: Setup QSMxT
      env:
        TEST_DIR: "/storage/tmp"
        REQUIRED_VERSION_TYPE: "TEST_PACKAGE_VERSION"
        OSF_TOKEN: ${{ secrets.OSF_TOKEN }}
        OSF_USERNAME: ${{ secrets.OSF_USER }}
        OSF_PASSWORD: ${{ secrets.OSF_PASS }}
        RUN_ID: ${{ github.run_id }}-${{ matrix.args }}
      run: |
        /bin/bash qsmxt/tests/setup_qsmxt.sh docker
    - name: Run template pipeline
      env:
        WEBDAV_LOGIN: ${{ secrets.WEBDAV_LOGIN }}
        WEBDAV_PASSWORD: ${{ secrets.WEBDAV_PASSWORD }}
        FREEIMAGE_KEY: ${{ secrets.FREEIMAGE_KEY }}
        OSF_TOKEN: ${{ secrets.OSF_TOKEN }}
        OSF_USERNAME: ${{ secrets.OSF_USER }}
        OSF_PASSWORD: ${{ secrets.OSF_PASS }}
        RUN_ID: ${{ github.run_id }}
        TEST_DIR: "/storage/tmp"
      run: |
        sudo docker exec \
          -e RUN_ID=$RUN_ID \
          -e WEBDAV_LOGIN=$WEBDAV_LOGIN \
          -e WEBDAV_PASSWORD=$WEBDAV_PASSWORD \
          -e FREEIMAGE_KEY=$FREEIMAGE_KEY \
          -e OSF_TOKEN=$OSF_TOKEN \
          -e OSF_USERNAME=$OSF_USERNAME \
          -e OSF_PASSWORD=$OSF_PASSWORD \
          -e TEST_DIR=$TEST_DIR \
          -e GITHUB_STEP_SUMMARY=$GITHUB_STEP_SUMMARY \
          qsmxt-container bash -c "pytest ${TEST_DIR}/QSMxT/qsmxt/tests/test_template.py -s -k '${{ matrix.args }}'"
    - uses: actions/upload-artifact@v4
      with:
        name: public-outputs-${{ matrix.args }}
        path: /storage/tmp/public-outputs

