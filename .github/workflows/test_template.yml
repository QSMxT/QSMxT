name: template pipeline test

on:
  workflow_dispatch:
  repository_dispatch:
  push:
    branches: [ 'main' ]
    paths:
      - setup.py
      - .github/workflows/test_template.yml
      - qsmxt/cli/main.py
      - qsmxt/tests/test_template.sh
      - qsmxt/tests/test_template.py
      - qsmxt/tests/utils.py
      - qsmxt/tests/setup_qsmxt.sh
      - qsmxt/scripts/logger.py
    
jobs:
  setup_qsmxt:
    runs-on: "self-hosted"
    outputs:
      setup-complete: 'true'
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: Setup QSMxT
      env:
        TEST_DIR: "/storage/tmp"
        REQUIRED_VERSION_TYPE: "TEST_PACKAGE_VERSION"
      run: |
        /bin/bash qsmxt/tests/setup_qsmxt.sh docker
  test_template:
    needs: setup_qsmxt
    runs-on: "self-hosted"
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: Setup QSMxT
      env:
        TEST_DIR: "/storage/tmp"
        REQUIRED_VERSION_TYPE: "TEST_PACKAGE_VERSION"
      run: |
        /bin/bash qsmxt/tests/setup_qsmxt.sh docker
    - name: Run template pipeline
      env:
        WEBDAV_LOGIN: ${{ secrets.WEBDAV_LOGIN }}
        WEBDAV_PASSWORD: ${{ secrets.WEBDAV_PASSWORD }}
        FREEIMAGE_KEY: ${{ secrets.FREEIMAGE_KEY }}
        OSF_TOKEN: ${{ secrets.OSF_TOKEN }}
        OSF_USER: ${{ secrets.OSF_USER }}
        OSF_PASS: ${{ secrets.OSF_PASS }}
        RUN_ID: ${{ github.run_id }}
        TEST_DIR: "/storage/tmp"
      run: |
        sudo docker exec -e RUN_ID=$RUN_ID -e WEBDAV_LOGIN -e WEBDAV_PASSWORD -e FREEIMAGE_KEY -e OSF_TOKEN -e OSF_USER -e OSF_PASS -e TEST_DIR qsmxt-container bash -c "pytest ${TEST_DIR}/QSMxT/qsmxt/tests/test_template.py -s"
    - uses: actions/upload-artifact@v3
      with:
        name: public-outputs
        path: /storage/tmp/public-outputs

