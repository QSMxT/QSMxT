name: Tests
on:
  push:
    branches: [ main, develop ]
    paths:
      - 'qsmxt/**/*.py'
      - 'qsmxt/tests/**'
      - 'setup.py'
      - '.github/workflows/unit_tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'qsmxt/**/*.py'
      - 'qsmxt/tests/**'
      - 'setup.py'
      - '.github/workflows/unit_tests.yml'
  workflow_dispatch:

jobs:
  qsmxt-tests:
    name: QSMxT Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8']
      fail-fast: false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest pytest-mock pytest-cov pytest-xdist

      - name: Run QSMxT tests
        run: |
          pytest qsmxt/tests/qsmxt/ \
            -v \
            --cov=qsmxt \
            --cov-report=xml \
            --cov-report=term \
            --tb=short \
            --junit-xml=qsmxt-test-results.xml

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.8'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: qsmxt-tests
          name: qsmxt-coverage

      - name: Upload QSMxT test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: qsmxt-test-results
          path: qsmxt-test-results.xml
          retention-days: 30

  dicom-convert-tests:
    name: DICOM Convert Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8']
      fail-fast: false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest pytest-mock pytest-cov pytest-xdist

      - name: Run DICOM Convert tests
        run: |
          pytest qsmxt/tests/dicom_convert/ \
            -v \
            --cov=qsmxt.cli.dicom_convert \
            --cov-report=xml \
            --cov-report=term \
            --tb=short \
            --junit-xml=dicom-convert-test-results.xml

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.8'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: dicom-convert-tests
          name: dicom-convert-coverage

      - name: Upload DICOM Convert test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dicom-convert-test-results
          path: dicom-convert-test-results.xml
          retention-days: 30

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [qsmxt-tests, dicom-convert-tests]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download QSMxT test results
        uses: actions/download-artifact@v4
        with:
          name: qsmxt-test-results
          path: .
        continue-on-error: true

      - name: Download DICOM Convert test results
        uses: actions/download-artifact@v4
        with:
          name: dicom-convert-test-results
          path: .
        continue-on-error: true
        
      - name: Test Summary
        run: |
          echo "## Unit Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Overall job status table
          echo "| Job | Status | Details |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|---------|" >> $GITHUB_STEP_SUMMARY
          
          # Get test counts for each suite
          QSMXT_SUMMARY="No results"
          if [ -f qsmxt-test-results.xml ]; then
            QSMXT_TOTAL=$(grep -o 'tests="[0-9]*"' qsmxt-test-results.xml | grep -o '[0-9]*' | head -1 || echo "0")
            QSMXT_FAILURES=$(grep -o 'failures="[0-9]*"' qsmxt-test-results.xml | grep -o '[0-9]*' | head -1 || echo "0")
            QSMXT_ERRORS=$(grep -o 'errors="[0-9]*"' qsmxt-test-results.xml | grep -o '[0-9]*' | head -1 || echo "0")
            QSMXT_PASSED=$((QSMXT_TOTAL - QSMXT_FAILURES - QSMXT_ERRORS))
            QSMXT_SUMMARY="${QSMXT_PASSED}/${QSMXT_TOTAL} passed"
          fi
          
          DICOM_SUMMARY="No results"
          if [ -f dicom-convert-test-results.xml ]; then
            DICOM_TOTAL=$(grep -o 'tests="[0-9]*"' dicom-convert-test-results.xml | grep -o '[0-9]*' | head -1 || echo "0")
            DICOM_FAILURES=$(grep -o 'failures="[0-9]*"' dicom-convert-test-results.xml | grep -o '[0-9]*' | head -1 || echo "0")
            DICOM_ERRORS=$(grep -o 'errors="[0-9]*"' dicom-convert-test-results.xml | grep -o '[0-9]*' | head -1 || echo "0")
            DICOM_PASSED=$((DICOM_TOTAL - DICOM_FAILURES - DICOM_ERRORS))
            DICOM_SUMMARY="${DICOM_PASSED}/${DICOM_TOTAL} passed"
          fi
          
          echo "| QSMxT Tests | ${{ needs.qsmxt-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} | $QSMXT_SUMMARY |" >> $GITHUB_STEP_SUMMARY
          echo "| DICOM Convert Tests | ${{ needs.dicom-convert-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} | $DICOM_SUMMARY |" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check overall status
          QSMXT_STATUS="${{ needs.qsmxt-tests.result }}"
          DICOM_STATUS="${{ needs.dicom-convert-tests.result }}"
          
          if [[ "$QSMXT_STATUS" == "success" && "$DICOM_STATUS" == "success" ]]; then
            echo "## ✅ All Jobs Passed!" >> $GITHUB_STEP_SUMMARY
            echo "All test suites completed successfully." >> $GITHUB_STEP_SUMMARY
          else
            echo "## ❌ Some Jobs Failed" >> $GITHUB_STEP_SUMMARY
            echo "Check the individual job logs for detailed error information." >> $GITHUB_STEP_SUMMARY
          fi